{"version":3,"sources":["components/AddReminder.js","components/Reminder.js","App.js","index.js"],"names":["AddReminder","props","addReminderForm","event","preventDefault","addReminder","state","name","date","handleNameChange","setState","target","value","handleDateChange","onSubmit","this","className","onChange","type","React","Component","Reminder","reminder","deleteReminder","strWithoutT","toString","replace","substr","length","onClick","App","date_field","reminders","filter","remObject","axios","post","then","response","concat","data","alert","deleteReminderOf","id","url","window","confirm","delete","get","map","ReactDOM","render","document","getElementById"],"mappings":"mPA6CeA,E,kDA3Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,gBAAkB,SAACC,GACjBA,EAAMC,iBACN,EAAKH,MAAMI,YAAY,EAAKC,MAAMC,KAAM,EAAKD,MAAME,OATlC,EAYnBC,iBAAmB,SAACN,GAClB,EAAKO,SAAS,CACZH,KAAMJ,EAAMQ,OAAOC,MACnBJ,KAAM,EAAKF,MAAME,QAfF,EAkBnBK,iBAAmB,SAACV,GAElB,EAAKO,SAAS,CACZH,KAAM,EAAKD,MAAMC,KACjBC,KAAML,EAAMQ,OAAOC,SApBrB,EAAKN,MAAQ,CACXE,KAAM,GACND,KAAM,IAJS,E,0CAyBnB,WACE,OACE,uBAAMO,SAAUC,KAAKb,gBAArB,UACE,sBAAKc,UAAU,OAAf,mBACQ,uBAAOJ,MAAOG,KAAKT,MAAMC,KAC7BU,SAAUF,KAAKN,sBAEnB,sBAAKO,UAAU,OAAf,mBACQ,uBAAOE,KAAK,iBAAiBN,MAAOG,KAAKT,MAAME,KACnDS,SAAUF,KAAKF,sBAEnB,qBAAKG,UAAU,SAAf,SACE,wBAAQA,UAAU,MAAME,KAAK,SAA7B,0B,GAtCgBC,IAAMC,WCcjBC,EAbE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eACtBC,EAAYF,EAASd,KAAKiB,WAAWC,QAAQ,IAAI,KACvD,OAEE,+BACE,6BAAKF,EAAYG,OAAO,EAAEH,EAAYI,OAAO,KAC7C,qBAAIZ,UAAU,UAAd,UAAyBM,EAASf,KAAlC,OACA,mCAAK,wBAAQS,UAAU,SAASa,QAASN,EAApC,2BCgFIO,G,wDA9Eb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IAgBRI,YAAc,SAACE,EAAMC,GACpB,IAAIuB,EAAYvB,EAAKiB,WAAWC,QAAQ,IAAI,KAC1C,GAAInB,GAAQC,EAEX,GAAsB,IADR,EAAKF,MAAM0B,UAAUC,QAAO,SAAAX,GAAQ,OAAIA,EAASf,OAASA,GAAQe,EAASd,OAASuB,KACvFH,OAAc,CACvB,IAAMM,EAAY,CAChB3B,OACAC,KAAKuB,GAKPI,IAAMC,KAAK,gBAAiBF,GACzBG,MAAK,SAAAC,GACJ,EAAK5B,SAAS,CACZsB,UAAW,EAAK1B,MAAM0B,UAAUO,OAAOD,EAASE,gBAKjDC,MAAM,6CACRA,MAAM,uBAtCI,EAwCnBC,iBAAmB,SAACC,GAClB,OAAO,WAGN,IAAMC,EAAG,wBAAoBD,GACbE,OAAOC,QAAQ,gDAE9BX,IACGY,OAAOH,GACPP,MAAK,SAAAC,GACF,EAAK5B,SAAS,CACdsB,UAAW,EAAK1B,MAAM0B,UAAUC,QAAO,SAAAX,GAAQ,OAAIA,EAASqB,KAAKA,YAjDzE,EAAKrC,MAAQ,CACX0B,UAAW,IAHI,E,qDAOnB,WAAqB,IAAD,OAElBG,IAGEa,IAAI,iBACHX,MAAK,SAAAC,GACJ,EAAK5B,SAAS,CAAEsB,UAAWM,EAASE,Y,oBA6C1C,WAAU,IAAD,OACP,OACE,sBAAKxB,UAAU,YAAf,UACE,kDACA,cAAC,EAAD,CAAaX,YAAaU,KAAKV,cAC/B,4CACA,gCACA,gCAEGU,KAAKT,MAAM0B,UAAUiB,KAAI,SAAA3B,GAAQ,OAChC,cAAC,EAAD,CAA4BA,SAAUA,EAAUC,eAAgB,EAAKmB,iBAAiBpB,EAASqB,KAAhFrB,EAASqB,kB,GAtElBxB,IAAMC,YCDxB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9f42f9a7.chunk.js","sourcesContent":["import React from 'react'\r\nclass AddReminder extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      date: '',\r\n      name: ''\r\n    }\r\n  }\r\n  addReminderForm = (event) => {\r\n    event.preventDefault()\r\n    this.props.addReminder(this.state.name, this.state.date)\r\n  }\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({\r\n      name: event.target.value,\r\n      date: this.state.date\r\n    })\r\n  }\r\n  handleDateChange = (event) => {\r\n\r\n    this.setState({\r\n      name: this.state.name,\r\n      date: event.target.value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.addReminderForm} >\r\n        <div className=\"name\">\r\n          Name: <input value={this.state.name}\r\n            onChange={this.handleNameChange} />\r\n        </div>\r\n        <div className=\"date\">\r\n          Date: <input type=\"datetime-local\" value={this.state.date}\r\n            onChange={this.handleDateChange} />\r\n        </div>\r\n        <div className=\"button\">\r\n          <button className=\"add\" type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default AddReminder","import React from 'react'\r\n\r\nconst Reminder = ({ reminder, deleteReminder }) => {\r\n    let strWithoutT=reminder.date.toString().replace('T',\" \")\r\n  return (\r\n    \r\n    <tr>\r\n      <td>{strWithoutT.substr(0,strWithoutT.length-8)}</td>\r\n      <td className=\"remName\">{reminder.name} </td>\r\n      <td> <button className=\"delete\" onClick={deleteReminder} >Delete</button></td>\r\n    </tr>\r\n\r\n  )\r\n}\r\n\r\nexport default Reminder\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n//const baseUrl = 'api/reminders'\r\n//const getAll = () => {\r\n // const request = axios.get(baseUrl)\r\n//  return request.then(response => response.data)\r\n//}\r\nimport AddReminder from './components/AddReminder'\r\nimport Reminder from './components/Reminder'\r\nimport './index.css'\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      reminders: [],\r\n\r\n    }\r\n  }\r\n  componentDidMount() {\r\n\r\n    axios\r\n     // .get('http://localhost:3001/api/reminders') //for excercises 2.4-2.10(works with JSON-server)\r\n     //.get('https://reminders-utu.herokuapp.com/api/reminders') //before production\r\n     .get('api/reminders')\r\n      .then(response => {\r\n        this.setState({ reminders: response.data })\r\n      })\r\n  }\r\n  addReminder = (name, date) => {\r\n   let date_field =date.toString().replace('T',\" \");\r\n     if (name && date) { \r\n       let filter = this.state.reminders.filter(reminder => reminder.name === name && reminder.date === date_field)\r\n      if (filter.length === 0) {\r\n        const remObject = {\r\n          name,\r\n          date:date_field\r\n        }\r\n       \r\n        //axios.post('http://localhost:3001/api/reminders', remObject)\r\n        //axios.post('https://reminders-utu.herokuapp.com/api/reminders', remObject)\r\n        axios.post('api/reminders', remObject)\r\n          .then(response => {\r\n            this.setState({\r\n              reminders: this.state.reminders.concat(response.data),\r\n              \r\n            })\r\n          })\r\n\r\n      } else alert('This reminder is already on the list')\r\n    } else alert('Fill in all fields')\r\n  }\r\n  deleteReminderOf = (id) => {\r\n    return () => {\r\n     // const url = `http://localhost:3001/api/reminders/${id}`\r\n     //const url = `https://reminders-utu.herokuapp.com/api/reminders/${id}`\r\n     const url = `api/reminders/${id}`\r\n      const question=window.confirm(\"Do you really want to delete this reminder?\")\r\n      if(question){\r\n      axios\r\n        .delete(url)\r\n        .then(response => {\r\n            this.setState({\r\n            reminders: this.state.reminders.filter(reminder => reminder.id!==id)\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"reminders\">\r\n        <h2 >Add new reminder</h2>\r\n        <AddReminder addReminder={this.addReminder} />\r\n        <h2>Reminders:</h2>\r\n        <table>\r\n        <tbody>  \r\n          \r\n          {this.state.reminders.map(reminder =>\r\n            <Reminder key={reminder.id} reminder={reminder} deleteReminder={this.deleteReminderOf(reminder.id)} />\r\n          )}\r\n        </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}